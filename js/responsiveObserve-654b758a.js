import{b as t,a as i}from"./default-b027f3eb.js";var e=["xxxl","xxl","xl","lg","md","sm","xs"],n={xs:"(max-width: 575px)",sm:"(min-width: 576px)",md:"(min-width: 768px)",lg:"(min-width: 992px)",xl:"(min-width: 1200px)",xxl:"(min-width: 1600px)",xxxl:"(min-width: 2000px)"},r=new Map,s=-1,a={};const c={matchHandlers:{},dispatch:function(t){return a=t,r.forEach((function(t){return t(a)})),r.size>=1},subscribe:function(t){return r.size||this.register(),s+=1,r.set(s,t),t(a),s},unsubscribe:function(t){r.delete(t),r.size||this.unregister()},unregister:function(){var t=this;Object.keys(n).forEach((function(i){var e=n[i],r=t.matchHandlers[e];null==r||r.mql.removeListener(null==r?void 0:r.listener)})),r.clear()},register:function(){var e=this;Object.keys(n).forEach((function(r){var s=n[r],c=function(n){var s=n.matches;e.dispatch(t(t({},a),{},i({},r,s)))},x=window.matchMedia(s);x.addListener(c),e.matchHandlers[s]={mql:x,listener:c},c(x)}))}};export{c as R,e as r};
